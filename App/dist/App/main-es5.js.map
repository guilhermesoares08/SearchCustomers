{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/customers/customers.component.ts","webpack:///src/app/customers/customers.component.html","webpack:///src/app/services/CustomerService.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CustomersComponent","http","customerService","getAllCustomers","getAllCities","subscribe","_customers","customers","filteredCustomers","_cities","cities","CustomerService","baseUrl","apiEndpoint","get","userId","filter","post","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'App';\n}\n","<div class=\"container\">\n  <app-customers></app-customers>\n</div>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CustomerService } from './services/CustomerService.service';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\n\n\n@NgModule({\n  declarations: [\t\t\n    AppComponent,      \n      CustomersComponent\n   ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BsDatepickerModule.forRoot(),\n    BsDropdownModule.forRoot()\n  ],\n  providers: [\n    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../_models/Customer';\nimport { HttpClient } from '@angular/common/http';\nimport { CustomerService } from '../services/CustomerService.service';\nimport { Classification } from '../_models/Classification';\nimport { Gender } from '../_models/Gender';\nimport { Region } from '../_models/Region';\nimport { City } from '../_models/City';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n\n  customers: Customer[];\n  cities: City[];\n  classifications: Classification[];\n  genders: Gender[];\n  regions: Region[];\n  startDate: Date;\n  endDate: Date;\n  filteredCustomers: Customer[];\n  constructor(private http: HttpClient, private customerService: CustomerService) {\n    \n\n   }\n\n  ngOnInit() {\n    this.getAllCustomers();\n    this.getAllCities();\n  }\n  \n  getAllCustomers() {    \n    this.customerService.getAllCustomers().subscribe(\n      // tslint:disable-next-line: variable-name\n      (_customers: Customer[]) => {\n        this.customers = _customers;\n        this.filteredCustomers = this.customers;\n      }      \n    );\n  }\n\n  getAllCities()  {\n    this.customerService.getAllCities().subscribe(\n      (_cities: City[])=>{\n        this.cities = _cities;\n      }\n    );\n  }\n  \n}\n","<form>\n  <div class=\"row\">\n    <div class=\"form-group col-md-6\">\n      <label>Name: </label> <input type=\"text\" class=\"form-control mr-2\" />\n    </div>\n    <div class=\"form-group col-md-6\">\n      <label>Gender:</label>\n      <select>\n        <option role=\"menuitem\" *ngFor=\"let t of genders\">\n          <a class=\"dropdown-item\">{{ t.name }}</a>\n        </option>\n      </select>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"form-group col-md-6\">\n      <label>City:</label>\n      <select>\n        <option role=\"menuitem\" *ngFor=\"let t of cities\">\n          <a class=\"dropdown-item\">{{ t.name }}</a>\n        </option>\n      </select>\n    </div>\n      <div class=\"form-group col-md-6\">\n        <label>Region:</label>\n        <select>\n          <option role=\"menuitem\" *ngFor=\"let t of regions\">\n            <a class=\"dropdown-item\">{{ t.name }}</a>\n          </option>\n        </select>\n      </div>    \n  </div>\n\n  <div class=\"row\">\n    <div class=\"form-group col-md-6\">\n      <label>Last Purchase:</label>\n      <input placeholder=\"\" type=\"text\" class=\"form-control \" bsDatepicker>                                  \n    </div>\n      <div class=\"form-group col-md-6\">\n        <label>Until:</label>\n        <input placeholder=\"\" type=\"text\" class=\"form-control \" bsDatepicker>                                  \n      </div>    \n  </div>\n\n \n\n  <button class=\"btn btn-outline-success\">Search</button>\n</form>\n\n<table class=\"table table-striped\">\n  <thead class=\"thead-dark\">\n    <tr>\n      <th>Classification</th>\n      <th>Name</th>\n      <th>Phone</th>\n      <th>Gender</th>\n      <th>City</th>\n      <th>Region</th>\n      <th>Last Purchase</th>\n      <th>Seller</th>\n    </tr>\n  </thead>\n  <tbody *ngIf=\"filteredCustomers && filteredCustomers.length\">\n    <tr *ngFor=\"let cust of filteredCustomers\">\n      <td>{{ cust.classification.name }}</td>\n      <td>{{ cust.name }}</td>\n      <td>{{ cust.phone }}</td>\n      <td>{{ cust.gender.name }}</td>\n      <td>{{ cust.city.name }}</td>\n      <td>{{ cust.region.name }}</td>\n      <td>{{ cust.lastPurchase }}</td>\n      <td>{{ cust.user.login }}</td>\n    </tr>\n  </tbody>\n</table>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { City } from '../_models/City';\nimport { Customer } from '../_models/Customer';\nimport { Filter } from '../_models/Filter';\nimport { Gender } from '../_models/Gender';\nimport { Region } from '../_models/Region';\nimport { UserSys } from '../_models/UserSys';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  baseUrl = environment.apiEndpoint + `/customer`;\n  constructor(private http: HttpClient) {\n\n  }\n\n  getAllCustomers(): Observable<Customer[]> {\n    return this.http.get<Customer[]>(this.baseUrl);\n  }\n\n  getCustomerByUser(userId: number): Observable<Customer[]> {\n    return this.http.get<Customer[]>(`${this.baseUrl}/getByUser/${userId}`);\n  }\n\n  getCustomerByFilter(filter: Filter)  {\n    return this.http.post(`${this.baseUrl}/filter`, filter);\n  }\n\n  getAllCities(): Observable<City[]> {\n    return this.http.get<City[]>(this.baseUrl + `/cities`);\n  }\n\n  getAllRegions(): Observable<Region[]> {\n    return this.http.get<Region[]>(this.baseUrl + `/regions`);\n  }\n\n  getAllSellers(): Observable<UserSys[]> {\n    return this.http.get<UserSys[]>(this.baseUrl + `/sellers`);\n  }\n\n  getAllGenders(): Observable<Gender[]> {\n    return this.http.get<Gender[]>(this.baseUrl + `/genders`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiEndpoint: 'http://localhost:5000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}